apiVersion: apps/v1
kind: Deployment
metadata:
  name: sda-orchestrate
  namespace: demo
spec:
  selector:
    matchLabels:
      app: sda-orchestrate
  replicas: 1
  template:
    metadata:
      labels:
        app: sda-orchestrate
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: tls-init
        image: busybox
        command: ["/bin/sh", "-c"]
        args: ["/bin/cp /tls-certs/* /tls/ && chown 1000:1000 /tls/* && chmod 0400 /tls/*"]
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
      containers:
      - name: sda-orchestrate
        image: "cscfi/sda-orchestrate:latest"
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        env:
          - name: DB_LEGA_OUT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: orchestrate-secret
                key: dbout
          - name: DB_LEGA_IN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: orchestrate-secret
                key: dbin
          - name: DB_HOST
            value: ""
          - name: BROKER_HOST
            value: ""
          - name: BROKER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: orchestrate-secret
                key: mqPassword
          - name: BROKER_USER
            value: "lega"
          - name: BROKER_PORT
            value: "5671"
          - name: BROKER_VHOST
            value: "lega"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        ports:
          - name: webapp
            containerPort: 5050
        volumeMounts:
          - name: tls
            mountPath: /tls/certs
          - name: tmp
            mountPath: "/tmp"
      volumes:
        - name: tmp
          emptyDir: {}
        - name: tls-certs
          secret:
            secretName: orhestrate-certs
        - name: tls
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: sda-orchestrate
  namespace: demo
  labels:
    app: sda-orchestrate
spec:
  ports:
    - name: webapp
      port: 5050
      targetPort: webapp
      protocol: TCP
  selector:
    app: sda-orchestrate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sda-orchestrate
  namespace: demo
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: sda-orchestrate
          servicePort: 5050
  tls:
    - hosts:
      - example.com
      secretName: sda-orch-expose
---
apiVersion: v1
data:
  dbin: ""
  dbout: ""
  mqPassword: ""
kind: Secret
metadata:
  name: orchestrate-secret
  namespace: demo
type: Opaque
---
apiVersion: v1
data:
  root.ca.crt: ""
  cert.ca.crt: ""
  cert.ca.key: ""
kind: Secret
metadata:
  name: orhestrate-certs
  namespace: demo
type: Opaque
